{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/address.ts","./src/app/common/cart-item.ts","./src/app/common/customer.ts","./src/app/common/message-model.ts","./src/app/common/order-item.ts","./src/app/common/order.ts","./src/app/common/purchase.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/alert/alert.component.ts","./src/app/components/alert/alert.component.html","./src/app/components/cart-details/cart-details.component.ts","./src/app/components/cart-details/cart-details.component.html","./src/app/components/cart-status/cart-status.component.ts","./src/app/components/cart-status/cart-status.component.html","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/login-status/login-status.component.ts","./src/app/components/login-status/login-status.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/members-page/members-page.component.ts","./src/app/components/members-page/members-page.component.html","./src/app/components/order-history/order-history.component.ts","./src/app/components/order-history/order-history.component.html","./src/app/components/product-category-menu/product-category-menu.component.ts","./src/app/components/product-category-menu/product-category-menu.component.html","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-details/product-details.component.html","./src/app/components/product-list/product-list.component.ts","./src/app/components/product-list/product-list.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/services/auth-interceptor.service.ts","./src/app/services/auth-service.service.ts","./src/app/services/cart.service.ts","./src/app/services/checkout.service.ts","./src/app/services/order-history.service.ts","./src/app/services/otp.service.ts","./src/app/services/product.service.ts","./src/app/services/shop-form.service.ts","./src/app/validators/shop-validators.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui-store';\n\n  contacts(){\n    alert(\"test\");\n  }\n}\n","<div class=\"page-wrapper\">\n\n  <!-- MENU SIDEBAR-->\n  <aside class=\"menu-sidebar d-none d-lg-block\">\n    <div class=\"logo\">\n      <a routerLink =\"/products\">\n        <img src=\"assets/images/logo.jpg\" alt=\"luv2shop\" class=\"img-responsive\" width=\"80px\"  height=\"60px\">\n      </a>\n    </div>\n<app-product-category-menu></app-product-category-menu>\n  </aside>\n  <!-- END MENU SIDEBAR-->\n\n  <!-- PAGE CONTAINER-->\n  <div class=\"page-container\">\n    <!-- HEADER DESKTOP-->\n    <header class=\"header-desktop\">\n      <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n          <div class=\"header-wrap\">\n\n            <app-search></app-search>\n\n            <app-login-status></app-login-status>\n\n            <app-cart-status></app-cart-status>\n\n          </div>\n          <div class=\"account-wrap\"></div>\n        </div>\n      </div>\n    </header>\n    <!-- END HEADER DESKTOP-->\n\n    <!-- MAIN CONTENT-->\n    <router-outlet></router-outlet>\n   <!-- <app-product-list></app-product-list>-->\n\n  </div>\n</div>\n<!-- END PAGE CONTAINER-->\n\n\n<footer>\n  <ul>\n<!--    <li><a href=\"http://localhost:4200/about\">About Us</a></li>-->\n    <li><a href=\"http://localhost:4200/about\">Contact Us</a></li>\n<!--    <li><a href=\"http://localhost:4200/about\">Help</a></li>-->\n  </ul>\n</footer>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductService } from './services/product.service';\nimport { Routes, RouterModule, ActivatedRoute } from '@angular/router';\nimport { ProductCategoryMenuComponent } from './components/product-category-menu/product-category-menu.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartStatusComponent } from './components/cart-status/cart-status.component';\nimport { CartDetailsComponent } from './components/cart-details/cart-details.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginStatusComponent } from './components/login-status/login-status.component';\nimport { AuthInterceptorService } from 'src/app/services/auth-interceptor.service';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\n\n/* import { OktaAuthModule, OktaCallbackComponent, OKTA_CONFIG } from '@okta/okta-angular';\nimport { OktaAuth } from '@Okta/okta-auth-js'; */\nimport { Router } from '@angular/router';\nimport { Injector } from '@angular/core';\nimport { MembersPageComponent } from './components/members-page/members-page.component';\n\nimport myAppConfig from './config/my-app-config';\nimport { OrderHistoryComponent } from './components/order-history/order-history.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AboutComponent } from './components/about/about.component';\n\n/* const oktaConfig = myAppConfig.oidc;\n\nconst oktaAuth = new OktaAuth(oktaConfig); */\n\n function sendToLoginPage(injector: Injector){\n  const router = injector.get(Router);\n  router.navigate(['/login']);\n}\n\nconst routes: Routes = [\n{path: 'order-history', component: OrderHistoryComponent /* canActivate: [true], data: { onAuthRequired: sendToLoginPage } */ },\n{path: 'members', component: MembersPageComponent/* , canActivate: [false], data: { onAuthRequired: sendToLoginPage } */},\n{path: 'login/callback', component: LoginComponent},\n{path: 'login', component: LoginComponent},\n{path: 'alert', component: AlertComponent},\n{path: 'about', component: AboutComponent},\n\n{path: 'checkout', component: CheckoutComponent},\n{path: 'cart-details', component: CartDetailsComponent},\n{path: 'product/getInfo/:id', component: ProductDetailsComponent},\n{path: 'product/getProducts/search/:keyword', component: ProductListComponent},\n{path: 'product/getProducts/:id', component: ProductListComponent},\n{path: 'product/getProducts', component: ProductListComponent},\n{path: '', redirectTo: 'product/getProducts', pathMatch: 'full'},\n{path: '**', redirectTo: 'product/getProducts', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductCategoryMenuComponent,\n    SearchComponent,\n    ProductDetailsComponent,\n    CartStatusComponent,\n    CartDetailsComponent,\n    CheckoutComponent,\n    LoginComponent,\n    LoginStatusComponent,\n    MembersPageComponent,\n    OrderHistoryComponent,\n    AlertComponent,\n    AboutComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n  MatButtonModule,\n  MatInputModule,\n  FormsModule,\n  MatCardModule,\n  BrowserAnimationsModule,\n  ToastrModule.forRoot()\n    /* OktaAuthModule */\n  ],\n  providers: [ProductService , { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}\n  /* , { provide: OKTA_CONFIG, useValue: { oktaAuth }} */],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Address {\nstreet: string;\ncity: string;\nstate: string;\ncountry: string;\nzipCode: string;\n}\n","import { Product } from 'src/app/common/Product';\n\nexport class CartItem {\nid: string;\nname: string;\nimageUrl: string;\ndiscountPrice: number;\nunitPrice: number;\nquantity: number;\n\nconstructor(product: Product){\nthis.id = product.id;\nthis.name = product.name;\nthis.imageUrl = product.imageUrl;\nthis.unitPrice = product.unitPrice;\nthis.discountPrice = product.discountPrice;\n\nthis.quantity = 1;\n\n}\n}\n","export class Customer {\nfirstName: string;\nlastName: string;\nemail: string;\nphone: string;\nidentity: string;\n}\n","export class MessageModel {\n    phone: string;\n    identity: string;\n    text: string;\n    otp:string;\n    status: string;\n    name: string;\n}\n","import { CartItem } from './cart-item';\n\nexport class OrderItem {\nimageUrl: string;\nunitPrice: number;\ndiscountPrice: number;\nquantity: number;\nproductId: string;\n\nconstructor(cartItem: CartItem){\nthis.imageUrl = cartItem.imageUrl;\nthis.discountPrice = cartItem.discountPrice;\nthis.unitPrice = cartItem.unitPrice;\nthis.quantity = cartItem.quantity;\nthis.productId = cartItem.id;\n}\n}\n","export class Order {\ntotalQuantity: number;\ntotalPrice: number;\n}\n","import { Customer } from './customer';\nimport { Address } from './address';\nimport { Order } from './order';\nimport { OrderItem } from './order-item';\n\nexport class Purchase {\ncustomer: Customer;\nshippingAddress: Address;\nbillingAddress: Address;\norder: Order;\norderItems: OrderItem[];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n}\n","<hr><hr><hr><hr><hr>\n\n<div>\n<img src=\"assets/images/logo.jpg\"  class=\"center\">\n</div>\n\n<div>\n  <h3>Nandini Cafe Treats!</h3>\n  <p>Exclusive Narasus Products Available.</p>\n  <p>For Delivery and any queries, please contact 9944370922/8754084538.</p>\n</div>\n\n<div>\n  <h3>Contact Us</h3>\n  <div>\n    <span class=\"bi bi-geo\">\n      No:R-77, Ground Floor, MMDA Colony, Water Tank Road, Arumbakkam,Near Poorvika Showroom,\n         Chennai - 600029\n    </span>\n    <div class=\"bi bi-mailbox\">\n      nctmegastore@gmail.com\n    </div>\n    <div class=\"bi bi-phone\">\n      9944370922/8754084538.\n    </div>\n  </div>\n</div>\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent {\n\n}\n","<h3>Your Order has been received.\\nWe will get back you soon.</h3>\n","import { Component } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\nimport { CartItem } from 'src/app/common/cart-item';\n\n@Component({\n  selector: 'app-cart-details',\n  templateUrl: './cart-details.component.html',\n  styleUrls: ['./cart-details.component.css']\n})\nexport class CartDetailsComponent {\ncartItems: CartItem[] = [];\ntotalPrice: number = 0;\ntotalDiscount: number = 0;\ntotalQuantity: number = 0;\nshippingFees: boolean = true;\n\nconstructor(private cartService: CartService){\n}\nngOnInit(): void{\nthis.listCartDetails();\n}\n\nlistCartDetails(){\nthis.cartItems = this.cartService.cartItems;\n\nthis.cartService.totalPrice.subscribe(\ndata=> this.totalPrice = data\n);\n\nthis.cartService.totalDiscount.subscribe(\ndata=> this.totalDiscount = data\n);\n\nthis.cartService.totalQuantity.subscribe(\ndata=> this.totalQuantity = data\n);\n\nthis.cartService.computeCartTotals();\n\nif(this.totalPrice>1000){\n   this.shippingFees = false;\n}\n\n}\n\nincrementQuantity(item: CartItem){\nthis.cartService.addToCart(item);\n}\n\ndecrementQuantity(item: CartItem){\nthis.cartService.decrementQuantity(item);\n}\n\nremove(item: CartItem){\nthis.cartService.remove(item);\n}\n\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <div *ngIf=\"cartItems.length>0\">\n      <table class=\"table table-bordered\">\n        <tr>\n          <th width=\"20%\">Product Image</th>\n          <th width=\"50%\">Product Details</th>\n          <th width=\"30%\"></th>\n        </tr>\n\n        <tr *ngFor=\" let temp of cartItems\">\n          <td>\n            <img src=\"{{temp.imageUrl}}\" class=\"image-responsive\" width=\"150px\"/>\n          </td>\n          <td>\n            <p>{{ temp.name }}</p>\n            <p class=\"price\"> {{ temp.discountPrice | currency: 'INR' }}</p>\n            <p> <strike>{{ temp.unitPrice | currency: 'INR' }}</strike></p>\n          </td>\n          <td>\n            <div class=\"items\">\n              <label>Quantity:</label>\n\n              <div class=\"row no-gutters\">\n                <div class=\"col\">\n                  <button  (click) =\"incrementQuantity(temp)\" class=\"btn btn-primary btn-sm\">\n                    <i class=\"fan fa-plus\"></i>\n                  </button>\n                </div>\n                <div class=\"col ml-4 mr-2\">\n                  {{temp.quantity}}\n                </div>\n                <div class=\"col\">\n                  <button (click)= \"decrementQuantity(temp)\" class=\"btn btn-primary btn-sm\">\n                    <i class=\"fan fa-minus\"></i>\n                  </button>\n                </div>\n                <div class=\"col-8\"></div>\n              </div>\n\n            </div>\n\n            <div>\n            <button (click)=\"remove(temp)\" class=\"btn btn-primary btn-sm mt-2\">Remove</button>\n            </div>\n\n            <p class=\"mt-2\">Subtotal:{{temp.quantity * temp.discountPrice | currency:'INR'}}</p>\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td>\n            <p>Total Quantity: {{ totalQuantity }}</p>\n            <p>Total MRP: {{ totalDiscount+totalPrice | currency:'INR'}}</p>\n            <p>Total Discount: {{ totalDiscount | currency:'INR'}}</p>\n            <p><b>Grand Total: {{ totalPrice | currency:'INR'}}</b></p>\n\n            <div *ngIf=\"shippingFees\">\n              <hr>\n              <h4>Delivery Charges:</h4>\n              <p>Applicable for below 1000 Rupees.</p>\n            </div>\n            <div>\n            <a routerLink=\"/checkout\" class=\"btn btn-primary\">Checkout</a>\n            </div>\n          </td>\n        </tr>\n      </table>\n      </div>\n      <div *ngIf=\"cartItems.length==0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n        Your Shopping Cart is Empty.\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component,OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-cart-status',\n  templateUrl: './cart-status.component.html',\n  styleUrls: ['./cart-status.component.css']\n})\nexport class CartStatusComponent implements OnInit{\n    totalPrice: number = 0.00;\n    totalDiscount: number = 0.00;\n    totalQuantity: number = 0;\n\n    constructor(private cartService: CartService){\n    }\n\n    ngOnInit(): void{\n        this.updateCartStatus();\n    }\n\n    updateCartStatus(){\n    this.cartService.totalPrice.subscribe(\n      data=> this.totalPrice = data\n    );\n\n    this.cartService.totalQuantity.subscribe(\n      data=> this.totalQuantity = data\n    );\n\n    this.cartService.totalDiscount.subscribe(\n          data=> this.totalDiscount = data\n        );\n\n    }\n}\n","<div class=\"cart-area d-n\">\n  <a routerLink=\"/cart-details\">\n    <div class=\"total\"> {{ totalPrice | currency: 'INR' }}\n      <span> {{ totalQuantity }}</span>\n    </div>\n    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n  </a>\n</div>\n","import { Component,OnInit } from '@angular/core';\nimport { FormGroup,FormBuilder,FormControl, Validator, Validators } from '@angular/forms';\nimport { ShopFormService } from 'src/app/services/shop-form.service';\nimport { ShopValidators } from 'src/app/validators/shop-validators';\nimport { Address } from 'src/app/common/address';\nimport { CartService } from 'src/app/services/cart.service';\nimport { CheckoutService } from 'src/app/services/checkout.service';\nimport { Router } from '@angular/router';\nimport { Purchase } from 'src/app/common/purchase';\nimport { OrderItem} from 'src/app/common/order-item';\nimport { Order } from 'src/app/common/order';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit{\n\ntotalPrice: number = 0;\ntotalDiscount: number = 0;\ntotalQuantity: number = 0;\nshippingFees: boolean = true;\nphones: string = null;\ncustomerValidate: boolean = false;\ncheckDisk: boolean = false;\n\naddress: Address = new Address();\n\n\n  storage: Storage = localStorage;\n\n/* creditCardMonths: number[] = [];\ncreditCardYears: number[] = []; */\n\ncheckoutFormGroup: FormGroup;\nconstructor(private formBuilder: FormBuilder,\n            private shopFormService: ShopFormService,\n            private cartService: CartService,\n            private checkoutService: CheckoutService,\n            private router: Router,\n            private toastr: ToastrService){\n}\n\nngOnInit(): void{\nthis.reviewCartDetails();\nthis.getAddressDetails();\n\nthis.checkoutFormGroup = this.formBuilder.group({\ncustomer: this.formBuilder.group({\nfirstName: new FormControl('',[Validators.required,Validators.minLength(2), ShopValidators.notOnlyWhiteSpace]),\nlastName: new FormControl('',[Validators.required,Validators.minLength(1), ShopValidators.notOnlyWhiteSpace]),\nphone: new FormControl('',[Validators.required,Validators.pattern('[0-9]{10}')]),\nemail: new FormControl('')\n//email: new FormControl('',[Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9._]+\\\\.[a-z]{2,4}$')])\n}),\nshippingAddress: this.formBuilder.group({\n/* country: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]), */\nstreet: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]),\ncity: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]),\n/* state: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]), */\nzipCode: new FormControl('',[Validators.required,Validators.minLength(6),ShopValidators.notOnlyWhiteSpace]),\n})\n\n//,\n/* billingAddress: this.formBuilder.group({\ncountry: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]),\nstreet: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]),\ncity: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]),\nstate: new FormControl('',[Validators.required,ShopValidators.notOnlyWhiteSpace]),\nzipCode: new FormControl('',[Validators.required,Validators.minLength(6),ShopValidators.notOnlyWhiteSpace]),\n}) */\n/* creditCard: this.formBuilder.group({\ncardType: new FormControl('',[Validators.required]),\nnameOnCard: new FormControl('',[Validators.required,Validators.minLength(2),ShopValidators.notOnlyWhiteSpace]),\ncardNumber: new FormControl('',[Validators.required,Validators.pattern('[0-9]{16}')]),\nsecurityCode: new FormControl('',[Validators.required,Validators.pattern('[0-9]{3}')]),\nexpirationMonth: new FormControl('',[Validators.required]),\nexpirationYear: new FormControl('',[Validators.required])\n}) */\n})\n\n//populate creditCard months\n/* const startMonth: number = new Date().getMonth()+1;\n\nthis.shopFormService.getCreditCardMonths(startMonth).subscribe(\ndata=>{\nthis.creditCardMonths = data;\n});\n\nthis.shopFormService.getCreditCardYears().subscribe(\ndata=>{\nthis.creditCardYears = data;\n}); */\n\n}\n\nonSubmit(){\n//alert(this.checkoutFormGroup.get('customer').value.email);\nif(this.checkoutFormGroup.invalid){\n//alert('test');\nthis.checkoutFormGroup.markAllAsTouched();\nreturn;\n}\n\nthis.phones = this.checkoutFormGroup.get('customer.phone').value;\n//this.phones = JSON.parse(this.storage.getItem('phone'));\n//alert(this.phones);\nthis.checkoutService.validateCustomer(this.phones).subscribe({\nnext: response => {\n if(response!=null && response.identity!=null && response.identity.length>0){\n\n     let order = new Order();\n       order.totalPrice = this.totalPrice;\n       order.totalQuantity = this.totalQuantity;\n\n       const cartItems = this.cartService.cartItems;\n\n       let orderItems: OrderItem[] = cartItems.map(temp=> new OrderItem(temp));\n\n       let purchase = new Purchase();\n\n       purchase.customer = this.checkoutFormGroup.controls['customer'].value;\n       //purchase.customer.identity = genUniqueId();\n\n       purchase.shippingAddress = this.checkoutFormGroup.controls['shippingAddress'].value;\n       //const shippingState: string = JSON.parse(JSON.stringify(purchase.shippingAddress.state));\n       /* const shippingCountry: string = JSON.parse(JSON.stringify(purchase.shippingAddress.country));\n       purchase.shippingAddress.state = shippingState;\n       purchase.shippingAddress.country = shippingCountry;  */\n\n    /*    purchase.billingAddress = this.checkoutFormGroup.controls['billingAddress'].value;\n       const billingState: string = JSON.parse(JSON.stringify(purchase.billingAddress.state));\n       const billingCountry: string = JSON.parse(JSON.stringify(purchase.billingAddress.country));\n       purchase.billingAddress.state = billingState;\n       purchase.billingAddress.country = billingCountry; */\n\n       purchase.order = order;\n       purchase.orderItems = orderItems;\n\n       this.checkoutService.placeOrder(purchase).subscribe({\n       next: response => {\n       //alert(`Your Order has been received.\\nOrder Tracking Number:${response.orderTrackingNumber}`);\n       //alert(`Your Order has been received.\\nWe will get back you soon.`);\n       this.resetCart();\n       this.toastr.success(\"Your Order has been received.\\nWe will get back you soon.\",\"Ordered Successfully!\");\n       this.router.navigateByUrl(\"/order-history\");\n       },\n       error: err => {\n       //alert(`There was an error:${err.message}`);\n       console.log(`There was an error:${err.message}`);\n       }\n       });\n    }else{\n    this.toastr.warning(\"Please Verify your mobile number.\",\"Need Verification!\");\n    this.router.navigateByUrl(\"login\");\n   }\n  },\n error: err => {\n //alert(`There was an error:${err.message}`);\n console.log(`There was an error:${err.message}`);\n return;\n }\n });\n\n\n\n}\n\nget firstName(){ return this.checkoutFormGroup.get('customer.firstName');}\nget lastName(){ return this.checkoutFormGroup.get('customer.lastName');}\nget phone(){ return this.checkoutFormGroup.get('customer.phone');}\nget email(){ return this.checkoutFormGroup.get('customer.email');}\n\nget shippingAddressStreet(){ return this.checkoutFormGroup.get('shippingAddress.street');}\nget shippingAddressCity(){ return this.checkoutFormGroup.get('shippingAddress.city');}\n/* get shippingAddressState(){ return this.checkoutFormGroup.get('shippingAddress.state');} */\nget shippingAddressZipCode(){ return this.checkoutFormGroup.get('shippingAddress.zipCode');}\n/* get shippingAddressCountry(){ return this.checkoutFormGroup.get('shippingAddress.country');} */\n\n/*\nget billingAddressStreet(){ return this.checkoutFormGroup.get('billingAddress.street');}\nget billingAddressCity(){ return this.checkoutFormGroup.get('billingAddress.city');}\nget billingAddressState(){ return this.checkoutFormGroup.get('billingAddress.state');}\nget billingAddressZipCode(){ return this.checkoutFormGroup.get('billingAddress.zipCode');}\nget billingAddressCountry(){ return this.checkoutFormGroup.get('billingAddress.country');}\n */\n\n\n/*\nget creditCardType(){ return this.checkoutFormGroup.get('creditCard.cardType');}\nget creditCardNameOnCard(){ return this.checkoutFormGroup.get('creditCard.nameOnCard');}\nget creditCardNumber(){ return this.checkoutFormGroup.get('creditCard.cardNumber');}\nget creditCardSecurityCode(){ return this.checkoutFormGroup.get('creditCard.securityCode');}\n */\n\n/* copyShippingAddressToBillingAddress(event){\nif(event.target.checked){\nthis.checkoutFormGroup.controls.billingAddress.setValue(this.checkoutFormGroup.controls.shippingAddress.value);\n}else{\nthis.checkoutFormGroup.controls.billingAddress.reset();\n}\n} */\n\nresetCart(){\nthis.cartService.cartItems = [];\nthis.cartService.totalQuantity.next(0);\nthis.cartService.totalPrice.next(0);\nthis.cartService.totalDiscount.next(0);\n\nthis.checkoutFormGroup.reset();\n\nthis.router.navigateByUrl(\"/product/getProducts\");\n}\n\nhandleMonthsAndYears(){\n/* const creditCardFormGroup = this.checkoutFormGroup.get('creditCard');\nconst currentYear: number = new Date().getFullYear();\nconst selectedYear: number = Number(creditCardFormGroup.value.expirationYear);\n\nlet startMonth: number;\nif(currentYear==selectedYear){\n  startMonth = new Date().getMonth()+1;\n}else{\n  startMonth = 1;\n}\n\nthis.shopFormService.getCreditCardMonths(startMonth).subscribe(\ndata=>{\nthis.creditCardMonths = data;\n}\n); */\n}\n\nreviewCartDetails(){\nthis.cartService.totalQuantity.subscribe(\n data=> this.totalQuantity = data\n);\nthis.cartService.totalPrice.subscribe(\ndata=> this.totalPrice = data\n);\nthis.cartService.totalDiscount.subscribe(\ndata=> this.totalDiscount = data\n);\nif(this.totalPrice>1000){\n   this.shippingFees = false;\n}\n}\n\n\ngetAddressDetails(){\nthis.phones = JSON.parse(this.storage.getItem('phone'));\nif(this.phones && this.phones.length>0){\n\nthis.cartService.getProfile(this.phones).subscribe({\nnext: response => {\nif(response!=null){\nthis.address.street = response.shippingAddress.street;\nthis.address.city = response.shippingAddress.city;\nthis.address.zipCode = response.shippingAddress.zipCode;\n\nthis.checkoutFormGroup.get('customer.firstName').setValue(response.customer.firstName);\nthis.checkoutFormGroup.get('customer.lastName').setValue(response.customer.lastName);\nif(response.customer.phone!=null){\n  this.checkDisk = true;\n}\nthis.checkoutFormGroup.get('customer.phone').setValue(response.customer.phone);\nthis.checkoutFormGroup.get('customer.email').setValue(response.customer.email);\n\nthis.checkoutFormGroup.get('shippingAddress.city').setValue(response.shippingAddress.city);\nthis.checkoutFormGroup.get('shippingAddress.street').setValue(response.shippingAddress.street);\nthis.checkoutFormGroup.get('shippingAddress.zipCode').setValue(response.shippingAddress.zipCode);\n}else{\nthis.checkoutFormGroup.get('customer.phone').setValue(this.phones);\nthis.checkDisk = true;\n}\n},\nerror: err => {\n//alert(`There was an error:${err.message}`);\nconsole.log(`There was an error:${err.message}`);\n}\n});\n}\n}\n\n}\n\nfunction genUniqueId(): string {\n  const dateStr = Date\n    .now()\n    .toString(36); // convert num to base 36 and stringify\n\n  const randomStr = Math\n    .random()\n    .toString(36)\n    .substring(2, 8); // start at index 2 to skip decimal point\n\n  return `${dateStr}-${randomStr}`;\n}\n","<div class=\"main-content page-m\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <form [formGroup]=\"checkoutFormGroup\" (ngSubmit)=\"onSubmit()\">\n        <div formGroupName=\"customer\" class=\"form-area\">\n          <h3>Customer</h3>\n\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>First Name</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"firstName\" type=\"text\">\n                <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\"\n                     class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"firstName.errors.required || firstName.errors.notOnlyWhiteSpace\">\n                    First Name is required\n                  </div>\n                  <div *ngIf = \"firstName.errors.minLength\">\n                    First Name atLeast 2 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Last Name</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"lastName\" type=\"text\">\n                <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"lastName.errors.required || lastName.errors.notOnlyWhiteSpace\">\n                    Last Name is required\n                  </div>\n                  <div *ngIf = \"lastName.errors.minLength\">\n                    Last Name atLeast 1 Character Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Phone Number</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"phone\" type=\"text\" [readonly]=\"checkDisk\">\n                <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"phone.errors.required || phone.errors.notOnlyWhiteSpace\">\n                    Phone Number is required\n                  </div>\n                  <div *ngIf = \"phone.errors.minLength\">\n                    Phone Number must be 10 digits Long\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Email</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"email\" type=\"text\">\n                <!--<div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"email.errors.required\">\n                    Email is required\n                  </div>\n                  <div *ngIf = \"email.errors.pattern\">\n                    Email Address must be in valid Format.\n                  </div>\n                </div>-->\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div formGroupName=\"shippingAddress\" class=\"form-area\">\n          <h3>Shipping Address</h3>\n\n          <!--<div class=\"row\">\n            <div class=\"col-md-2\"> <label>Country</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"country\">\n                  <option>India</option>\n                </select>\n\n                <div *ngIf=\"shippingAddressCountry.invalid\n                && (shippingAddressCountry.dirty || shippingAddressCountry.touched)\"\n                     class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"shippingAddressCountry.errors.required \">\n                    Country is required\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>-->\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Street</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"street\" type=\"text\">\n                <div *ngIf=\"shippingAddressStreet.invalid && (shippingAddressStreet.dirty || shippingAddressStreet.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"shippingAddressStreet.errors.required || shippingAddressStreet.errors.notOnlyWhiteSpace\">\n                    Street is required\n                  </div>\n                  <div *ngIf = \"shippingAddressStreet.errors.minLength\">\n                    Street atLeast 2 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Location</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"city\" type=\"text\">\n                <div *ngIf=\"shippingAddressCity.invalid && (shippingAddressCity.dirty || shippingAddressCity.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"shippingAddressCity.errors.required || shippingAddressCity.errors.notOnlyWhiteSpace\">\n                    Location is required\n                  </div>\n                  <div *ngIf = \"shippingAddressCity.errors.minLength\">\n                    Location atLeast 2 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!--<div class=\"row\">\n            <div class=\"col-md-2\"> <label>State</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"state\">\n                  <option>Tamil Nadu</option>\n                </select>\n\n                <div *ngIf=\"shippingAddressState.invalid\n                && (shippingAddressState.dirty || shippingAddressState.touched)\"\n                     class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"shippingAddressState.errors.required \">\n                    State is required\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>-->\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Zip Code</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"zipCode\" type=\"text\">\n                <div *ngIf=\"shippingAddressZipCode.invalid && (shippingAddressZipCode.dirty || shippingAddressZipCode.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"shippingAddressZipCode.errors.required || shippingAddressZipCode.errors.notOnlyWhiteSpace\">\n                    ZipCode is required\n                  </div>\n                  <div *ngIf = \"shippingAddressZipCode.errors.minLength\">\n                    ZipCode atLeast 6 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n       <!-- <div class=\"input-space\">\n          <label class=\"au-checkbox\">\n            <input type=\"checkbox\" (change)=\"copyShippingAddressToBillingAddress($event) \">\n            <span class=\"au-checkmark\"></span>Billing Address Same As Shipping Address\n          </label>\n        </div>-->\n\n      <!--  <div formGroupName=\"billingAddress\" class=\"form-area\">\n          <h3>Billing Address</h3>\n\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Country</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"country\">\n                  <option>India</option>\n                </select>\n                <div *ngIf=\"billingAddressCountry.invalid\n                && (billingAddressCountry.dirty || billingAddressCountry.touched)\"\n                     class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"billingAddressCountry.errors.required \">\n                    Country is required\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Street</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"street\" type=\"text\">\n                <div *ngIf=\"billingAddressStreet.invalid && (billingAddressStreet.dirty || billingAddressStreet.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"billingAddressStreet.errors.required || billingAddressStreet.errors.notOnlyWhiteSpace\">\n                    Street is required\n                  </div>\n                  <div *ngIf = \"billingAddressStreet.errors.minLength\">\n                    Street atLeast 2 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>City</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"city\" type=\"text\">\n                <div *ngIf=\"billingAddressCity.invalid && (billingAddressCity.dirty || billingAddressCity.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"billingAddressCity.errors.required || billingAddressCity.errors.notOnlyWhiteSpace\">\n                    City is required\n                  </div>\n                  <div *ngIf = \"billingAddressCity.errors.minLength\">\n                    City atLeast 2 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>State</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"state\">\n                  <option>Tamil Nadu</option>\n                </select>\n                <div *ngIf=\"billingAddressState.invalid\n                && (billingAddressState.dirty || billingAddressState.touched)\"\n                     class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"billingAddressState.errors.required \">\n                    State is required\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Zip Code</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"zipCode\" type=\"text\">\n                <div *ngIf=\"billingAddressZipCode.invalid && (billingAddressZipCode.dirty || billingAddressZipCode.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"billingAddressZipCode.errors.required || billingAddressZipCode.errors.notOnlyWhiteSpace\">\n                    ZipCode is required\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>-->\n\n        <!--<div formGroupName=\"creditCard\" class=\"form-area\">\n          <h3>Credit Card</h3>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Card Type</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"cardType\">\n                  <option></option>\n                  <option>Visa</option>\n                  <option>MasterCard</option>\n                </select>\n                <div *ngIf=\"creditCardType.invalid\n                && (creditCardType.dirty || creditCardType.touched)\"\n                     class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"creditCardType.errors.required \">\n                    Card Type is required\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Name On Card</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"nameOnCard\" type=\"text\">\n                <div *ngIf=\"creditCardNameOnCard.invalid && (creditCardNameOnCard.dirty || creditCardNameOnCard.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"creditCardNameOnCard.errors.required || creditCardNameOnCard.errors.notOnlyWhiteSpace\">\n                    Name is required\n                  </div>\n                  <div *ngIf = \"creditCardNameOnCard.errors.minLength\">\n                    Name atLeast 2 Characters Long!\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Card Number</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"cardNumber\" type=\"text\">\n                <div *ngIf=\"creditCardNumber.invalid && (creditCardNumber.dirty || creditCardNumber.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"creditCardNumber.errors.required || creditCardNumber.errors.notOnlyWhiteSpace\">\n                    Number is required\n                  </div>\n                  <div *ngIf = \"creditCardNumber.errors.minLength\">\n                    Number must be 16 digits Long\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Security Code</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <input formControlName=\"securityCode\" type=\"text\">\n                <div *ngIf=\"creditCardSecurityCode.invalid && (creditCardSecurityCode.dirty || creditCardSecurityCode.touched)\" class=\"alert alert-danger mt-1\">\n                  <div *ngIf=\"creditCardSecurityCode.errors.required || creditCardSecurityCode.errors.notOnlyWhiteSpace\">\n                    Number is required\n                  </div>\n                  <div *ngIf = \"creditCardSecurityCode.errors.minLength\">\n                    Number must be 3 digits Long\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Expiration Month</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"expirationMonth\">\n                  <option *ngFor=\"let month of creditCardMonths\">\n                    {{ month }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\"> <label>Expiration Year</label></div>\n            <div class=\"col-md-9\">\n              <div class=\"input-space\">\n                <select formControlName=\"expirationYear\" (change)=\"handleMonthsAndYears()\">\n                  <option *ngFor = \"let year of creditCardYears\">\n                    {{ year }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>-->\n\n        <!-- Order Details-->\n        <div class=\"form-area\">\n            <h3>Review Your Order</h3>\n          <p>Total Quantity: {{ totalQuantity }}</p>\n          <p>Total Price: {{ totalPrice | currency: 'INR'}}</p>\n          <!--<p>Total Discount: {{ totalDiscount | currency: 'INR'}}</p>-->\n\n          <div *ngIf=\"shippingFees\"><hr>\n            <p><b>Delivery Charges applicable for below 1000 Rupees.</b></p>\n            <hr>\n          </div>\n        </div>\n\n        <div class=\"text-center\">\n          <button type=\"submit\" class=\"btn btn-info\">Purchase</button>\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { Customer } from 'src/app/common/customer';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\n/* import { OktaAuthStateService, OKTA_AUTH } from '@okta/okta-angular';\nimport { OktaAuth } from '@okta/okta-auth-js'; */\n\n@Component({\n  selector: 'app-login-status',\n  templateUrl: './login-status.component.html',\n  styleUrls: ['./login-status.component.css']\n})\nexport class LoginStatusComponent implements OnInit{\n\nisAuthenticated: boolean = false;\nuserFullName: string = '';\norderHistory: boolean = false;\nmemberShow: boolean = false;\n\nstorage: Storage = localStorage;\n\nconstructor(/* private oktaAuthService: OktaAuthStateService,\n@Inject(OKTA_AUTH) private oktaAuth: OktaAuth */private route: ActivatedRoute,\n                                                private authService: AuthServiceService,\n                                                private router: Router){\n                                                }\n\nngOnInit(): void{\n/*   this.oktaAuthService.authState$.subscribe(\n    (result)=> {\n      this.isAuthenticated = result.isAuthenticated;\n      this.getUserDetails();\n    }\n  ); */\n\n  let customer = new Customer();\n  customer.phone = JSON.parse(this.storage.getItem('phone'));\n  customer.identity = JSON.parse(this.storage.getItem('identity'));\n\n  if(customer.phone == '9944370922' && customer.identity == '870306080171'){\n  this.authService.getAuthenticateDetail(customer).subscribe({\n  next: response => {\n    this.memberShow = true;\n  },\n  error: err => {\n   this.memberShow = false;\n   console.log(`There was an error:${err.message}`);\n  }\n  });\n  }\n\n  this.orderHistory = JSON.parse(this.storage.getItem('orderHistory'));\n}\n\ngetUserDetails(){\n/*   if(this.isAuthenticated){\n    this.oktaAuth.getUser().then(\n      (res)=> {\n        this.userFullName = res.user as string;\n\n        const theEmail = res.email;\n        this.storage.setItem('userEmail',JSON.stringify(theEmail));\n      }\n    );\n  } */\n}\n\nlogout(){\n  /* this.oktaAuth.signOut(); */\n  this.storage.clear();\n  this.memberShow = false;\n  location.reload();\n  this.router.navigateByUrl(\"product/getProducts\");\n}\n\n}\n","<div class=\"login-status-header\">\n  <div *ngIf=\"isAuthenticated && userFullName\" class=\"login-status-user-info\">\n    Welcome Back {{ userFullName }}!\n  </div>\n\n\n  <div class=\"security-btn\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n       title=\"R-77,\n  Ground Floor,\n  MMDA Colony, Water Tank Road,\n  Arumbakkam,\n  Near Poorvika Showroom,\n  Chennai - 600029\">\n    <span class=\"bi bi-geo \">Location</span>\n  </div>\n\n  <div class=\"security-btn ml-1\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Call Us For Delivery!\">\n    <span class=\"bi bi-phone \">9944370922</span>\n  </div>\n\n  <div *ngIf=\"!orderHistory\">\n  <button  routerLink=\"/login\" class=\"security-btn\">Login</button>\n  </div>\n\n\n  <div *ngIf=\"memberShow\">\n  <button routerLink = \"/members\" class=\"security-btn ml-1\">Member</button>\n  </div>\n\n  <div *ngIf=\"orderHistory\">\n      <button routerLink = \"/order-history\" class=\"security-btn ml-3\" >Orders</button>\n      <button (click)=\"logout()\" class=\"security-btn\">Logout</button>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { MessageModel } from 'src/app/common/message-model';\nimport { Customer } from 'src/app/common/customer';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { OtpService } from 'src/app/services/otp.service';\nimport { map } from 'rxjs/operators';\n/* import { OktaAuth } from '@okta/okta-auth-js';\nimport { OKTA_AUTH } from '@okta/okta-angular';\nimport OktaSignIn from '@okta/okta-signin-widget'; */\n\nimport myAppConfig from '../../config/my-app-config';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  implements OnInit{\n\n/* oktaSignin: any; */\n\nusername : string =\"\";\npassword : string =\"\";\nphone: string=\"\";\nerrorMsg: string = \"Please Enter Mobile Number to Proceed.\";\notp: string=\"\";\nisDisabled: boolean = true;\n\nstorage: Storage = localStorage;\n\nconstructor( private route: ActivatedRoute,\n             private router: Router,\n             private otpService: OtpService,\n             private authService: AuthServiceService\n/* @Inject(OKTA_AUTH) private oktaAuth: OktaAuth */){\n\n if(JSON.parse(this.storage.getItem('orderHistory'))){\n   this.router.navigateByUrl(\"product/getProducts\");\n }\n\n/* this.oktaSignin = new OktaSignIn({\n  logo: 'assets/images/logo.png',\n  baseUrl: myAppConfig.oidc.issuer.split('/oauth2')[0],\n  clientId: myAppConfig.oidc.clientId,\n  redirectUri: myAppConfig.oidc.redirectUri,\n  authParams: {\n    pkce: true,\n    issuer: myAppConfig.oidc.issuer,\n    scopes: myAppConfig.oidc.scopes\n  }\n}); */\nif(JSON.parse(this.storage.getItem('phone'))!=null){\n  this.phone = JSON.parse(this.storage.getItem('phone'));\n}\n}\n\nngOnInit(): void{\n  /* this.oktaSignin.remove();\n\n  this.oktaSignin.renderEl({\n    el: '#okta-sign-in-widget'},\n    (response: any)=>{\n      if(response.status=== 'SUCCESS'){\n        this.oktaAuth.signInWithRedirect();\n      }\n    },\n    (error: any) => {\n      throw error;\n     }\n    ); */\n}\n\n\nsubmit(){\nif(this.otp==\"\" || this.otp==null){\nthis.errorMsg = \"Please Enter OTP to Proceed\";\nthis.storage.setItem('orderHistory',JSON.stringify(\"false\"));\n}else{\n\nlet message = new MessageModel();\nlet customer = new Customer();\n\nmessage.phone = this.phone;\nmessage.otp = this.otp;\n\n            if(this.phone == \"9944370922\" ) {\n              message.identity = '870306080171';\n            }else {\n              message.identity = genUniqueId();\n            }\n\n\ncustomer.phone = this.phone;\ncustomer.identity = message.identity;\n\nif(message.phone==null){\n  message.phone = JSON.parse(this.storage.getItem('phone'));\n}\n\nthis.otpService.ValidateOtp(message).subscribe({\nnext: response => {\n  this.storage.setItem('identity',JSON.stringify(message.identity));\n  this.storage.setItem('phone',JSON.stringify(message.phone));\n\n  this.authService.getAuthenticateDetail(customer).subscribe({\n  next: response => {\n    this.storage.setItem('authToken',JSON.stringify(`${response.data}`));\n  },\n  error: err => {\n    console.log(`There was an error:${err.message}`);\n    this.storage.setItem('phone',JSON.stringify(message.phone));\n    return;\n  }\n  });\nthis.storage.setItem('orderHistory',JSON.stringify(\"true\"));\n\n //window.location.reload();\nlocation.reload();\n//alert(`Login Successfully.${response.data}`);\n},\nerror: err => {\n//alert(`There was an error:${err.message}`);\n console.log(`There was an error:${err.message}`);\nthis.router.navigateByUrl(\"/login\");\n}\n});\n\n\nthis.errorMsg=\"\";\nthis.router.navigateByUrl(\"product/getProducts\");\n//this.storage.setItem('orderHistory',JSON.stringify(\"true\"));\n}\nthis.clear();\n}\n\nclear(){\nthis.phone =\"\";\nthis.password = \"\";\n}\n\nkeyPress(event: KeyboardEvent) {\n    const pattern = /[0-9]/;\n    const inputChar = String.fromCharCode(event.charCode);\n    if (!pattern.test(inputChar)) {\n        event.preventDefault();\n    }\n}\n\ncheck(value: string){\n    if(value.length==10){\n      this.isDisabled = false;\n    }else{\n    this.isDisabled = true;}\n}\n\notpCall(){\n\nlet message = new MessageModel();\nmessage.phone = this.phone;\n//message.identity = genUniqueId();\n\nthis.storage.setItem('phone',JSON.stringify(this.phone));\n\nthis.otpService.RequestOtp(message).subscribe({\nnext: response => {\nthis.errorMsg = \"OTP has been sent Successfully, Please enter the same.\";\n},\nerror: err => {\n//alert(`There was an error:${err.message}`);\n console.log(`There was an error:${err.message}`);\n}\n});\n\n}\n\n}\n\nfunction genUniqueId(): string {\n  const dateStr = Date\n    .now()\n    .toString(36); // convert num to base 36 and stringify\n\n  const randomStr = Math\n    .random()\n    .toString(36)\n    .substring(2, 8); // start at index 2 to skip decimal point\n\n  return `${dateStr}-${randomStr}`;\n}\n\n","        <table>\n          <tr>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"login-main\">\n              <mat-card >\n\n                <mat-card-header>\n                  <mat-card-title>Login Page</mat-card-title>\n                </mat-card-header>\n\n                <mat-card-content>\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                    <mat-label>Phone Number</mat-label>\n                    <input #box matInput placeholder=\"Enter your number\" name=\"phone\" (keypress)=\"keyPress($event)\" (keyup) = \"check(box.value)\"\n                           [(ngModel)] =\"phone\">\n                  </mat-form-field>\n\n                  <mat-card-actions align=\"end\">\n                    <button mat-raised-button color=\"primary\" (click)=\"otpCall()\" [disabled]=\"isDisabled\">Request Otp</button>\n                  </mat-card-actions>\n\n                </mat-card-content>\n\n                <mat-card-actions align=\"end\">\n                  <mat-card>\n                    <input #box matInput placeholder=\"Enter otp\"  (keypress)=\"keyPress($event)\" name=\"otp\" [(ngModel)] =\"otp\">\n                  </mat-card>\n                  <button mat-raised-button color=\"primary\" (click)=\"submit()\">Login</button>\n                </mat-card-actions>\n\n              </mat-card>\n\n              <span> <button mat-button color=\"accent\">{{errorMsg}}</button></span>\n\n            </div>\n\n          </tr>\n          <hr>\n          <tr>\n            <div class=\"image_block\">\n              <img src=\"assets/images/products/main.jpg\" class=\"img-responsive\" width=\"1000px\"  height=\"500px\">\n            </div>\n          </tr>\n          <hr>\n        </table>\n\n\n\n\n\n","import { Component,OnInit } from '@angular/core';\nimport { OrderResp } from 'src/app/common/order-resp';\nimport { OrderHistory } from 'src/app/common/order-history';\nimport { OrderHistoryService } from 'src/app/services/order-history.service';\n\n@Component({\n  selector: 'app-members-page',\n  templateUrl: './members-page.component.html',\n  styleUrls: ['./members-page.component.css']\n})\nexport class MembersPageComponent implements OnInit {\norderHistoryList: OrderResp[]=[];\n\nconstructor(private orderHistoryService: OrderHistoryService){}\n\n ngOnInit(): void {\n    this.handleOrderHistory();\n }\n\n handleOrderHistory(){\n     this.orderHistoryService.getOrders().subscribe(\n       data => {\n         this.orderHistoryList = data;\n       }\n     );\n }\n\n updateStatus(id: string){\n    this.orderHistoryService.updateOrder(id).subscribe(\n       data => {\n         console.log(data);\n       }\n     );\n     location.reload();\n }\n\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <h3>Your Orders</h3>\n\n      <div *ngIf=\"orderHistoryList.length>0\">\n\n        <table class=\"table table-bordered\">\n          <tr>\n            <th width=\"20%\">Order Tracking Number</th>\n            <th width=\"10%\">Total Price</th>\n            <th width=\"10%\">Total Quantity</th>\n            <th width=\"10%\">Date</th>\n            <th width=\"10%\">Status</th>\n            <th width=\"10%\">Phone</th>\n            <th width=\"10%\">Action</th>\n          </tr>\n\n\n          <tr *ngFor = \"let temp of orderHistoryList\">\n            <td>{{temp.orderTrackingNumber}}</td>\n            <td>{{temp.totalPrice | currency: 'INR'}}</td>\n            <td>{{temp.totalQuantity}}</td>\n            <td>{{temp.dateCreated | date: 'medium'}}</td>\n            <td>{{temp.status}}</td>\n            <td>{{temp.phone}}</td>\n            <div>\n            <td><button  (click) =\"updateStatus(temp.orderTrackingNumber)\" class=\"btn btn-primary btn-sm\">Update</button></td>\n            </div>\n          </tr>\n\n        </table>\n      </div>\n\n      <div *ngIf=\"orderHistoryList.length==0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n        No Orders Found.\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component,OnInit } from '@angular/core';\nimport { OrderHistory } from 'src/app/common/order-history';\nimport { OrderHistoryService } from 'src/app/services/order-history.service';\nimport { Customer } from 'src/app/common/customer';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class OrderHistoryComponent implements OnInit {\n\n orderHistoryList: OrderHistory[]=[];\n storage: Storage = localStorage;\n authError: string = \"\";\n\n constructor(private orderHistoryService: OrderHistoryService,\n             private authService: AuthServiceService,\n             private route: ActivatedRoute, private router: Router){\n             }\n\n ngOnInit(): void {\n    this.loadAuth();\n    this.handleOrderHistory();\n    this.router.navigateByUrl(\"/order-history\");\n  }\n\n  loadAuth(){\n  let customer = new Customer();\n  customer.phone = JSON.parse(this.storage.getItem('phone'));\n  customer.identity = JSON.parse(this.storage.getItem('identity'));\n\n      this.authService.getAuthenticateDetail(customer).subscribe({\n      next: response => {\n        this.storage.setItem('authToken',JSON.stringify(`${response.data}`));\n      },\n      error: err => {\n        console.log(`There was an error:${err.message}`);\n      }\n      });\n  }\n\n  handleOrderHistory(){\n    const thePhone = JSON.parse(this.storage.getItem('phone'));\n\n    /* this.orderHistoryService.getOrderHistory1(thePhone).subscribe(\n      data => {\n        this.orderHistoryList = data.content;\n      }\n    ); */\n\n    this.orderHistoryService.getOrderHistory1(thePhone).subscribe({\n      next: response => {\n        this.orderHistoryList = response.content;\n        this.storage.setItem('authError',JSON.stringify(\"false\"));\n        this.authError = 'No Records Found.Please Create the Order.';\n      },\n      error: err => {\n       console.log(`There was an error:${err.message}`);\n       if(err.status == 401){\n        this.storage.setItem('authError',JSON.stringify(\"true\"));\n        this.authError = 'Not Authenticated! Please login again.';\n       }\n      }\n      });\n  }\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <h3>Your Orders</h3>\n\n      <div *ngIf=\"orderHistoryList.length>0\">\n\n        <table class=\"table table-bordered\">\n          <tr>\n            <th width=\"20%\">Order Tracking Number</th>\n            <th width=\"10%\">Total Price</th>\n            <th width=\"10%\">Total Quantity</th>\n            <th width=\"10%\">Date</th>\n            <th width=\"10%\">Status</th>\n          </tr>\n\n\n            <tr *ngFor = \"let temp of orderHistoryList\">\n              <td>{{temp.orderTrackingNumber}}</td>\n              <td>{{temp.totalPrice | currency: 'INR'}}</td>\n              <td>{{temp.totalQuantity}}</td>\n              <td>{{temp.dateCreated | date: 'medium'}}</td>\n              <td>{{temp.status}}</td>\n            </tr>\n\n        </table>\n      </div>\n      <div *ngIf=\"orderHistoryList.length==0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n        {{authError}}.\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductCategory } from 'src/app/common/product-category';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-category-menu',\n  templateUrl: './product-category-menu.component.html',\n  styleUrls: ['./product-category-menu.component.css']\n})\nexport class ProductCategoryMenuComponent implements OnInit {\n\n  productCategories: ProductCategory[]=[];\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n  this.listProductCategories();\n  }\n\n  listProductCategories(){\n  this.productService.getProductCategories().subscribe(\n  data=> {\n  this.productCategories = data;\n  }\n  );\n  }\n\n}\n","<div class=\"menu-sidebar-content js-scrollbar1\">\n  <nav class=\"navbar-sidebar\">\n    <ul class=\"list-unstyled navbar-list\">\n      <li *ngFor = \"let category of productCategories\">\n        <a routerLink=\"product/getProducts/{{category.id}}\" routerLinkActive=\"active-link\">\n        {{ category.categoryName }}\n        </a>\n      </li>\n    </ul>\n  </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/common/product';\nimport { ProductService } from 'src/app/services/product.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { CartItem } from 'src/app/common/cart-item';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product!: Product;\n\n  constructor(private productService: ProductService,\n  private cartService: CartService,\n  private route: ActivatedRoute,private router: Router) { }\n\n  ngOnInit(): void {\n  this.route.paramMap.subscribe(()=>{\n    this.handleProductDetails();\n    });\n  }\n\nhandleProductDetails(){\nconst theProductId: number = +this.route.snapshot.paramMap.get('id')!;\nthis.productService.getProductInfo(theProductId).subscribe(\ndata=>{\nthis.product = data;\n})\n}\n\n goHome(){\n  this.router.navigateByUrl(\"product/getProducts\");\n  }\n\n  addToCart(){\n  //alert(this.product.name);\n   const theCartItem = new CartItem(this.product);\n   this.cartService.addToCart(theCartItem);\n  }\n\n}\n\n\n\n\n","<div class=\"detail-section\">\n  <div class=\"container-fluid\">\n    <img src=\"{{product.imageUrl}}\" class=\"detail-img\">\n\n    <h3>{{product.name}}</h3>\n    <div class=\"price\">{{product.discountPrice | currency:'INR'}}</div>\n    <div *ngIf = \"product.unitPrice>0\"> <strike>{{product.unitPrice | currency:'INR'}}</strike></div>\n    <button (click) =\"addToCart()\" class=\"btn btn-primary btn-sm\">Add to cart</button>\n\n    <hr>\n    <h4>Description</h4>\n    <p>{{product.description}}</p>\n\n    <button class=\"btn btn-primary btn-sm\" (click)=\"goHome()\">\n      Back to Home\n    </button>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Product } from 'src/app/common/Product';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products: Product[] = [];\n  currentCategoryId: number = 1;\n  previousCategoryId: number = 1;\n  searchMode: boolean = false;\n\n  thePageNumber: number = 1;\n  thePageSize: number = 25;\n  theTotalElements: number = 0;\n\n  previousKeyword: string=\"\";\n  constructor(private productService: ProductService,\n    private cartService: CartService,\n    private route: ActivatedRoute,\n     private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n\n  handleSearchProducts() {\n    const theKeyword: string = this.route.snapshot.paramMap.get('keyword');\n\nif(this.previousKeyword != theKeyword){\nthis.thePageNumber=1;\n}\nthis.previousKeyword = theKeyword;\n\n\n    this.productService.getSearchListPaginate(this.thePageNumber - 1,\n                                                    this.thePageSize,\n                                                    theKeyword).subscribe(\n      data => {\n         this.products = data.content;\n                  this.thePageNumber = data.number + 1;\n                  this.thePageSize = data.size;\n                  this.theTotalElements = data.totalElements;\n      }\n    )\n  }\n\n  handleListProducts() {\n    const categoryId: boolean = this.route.snapshot.paramMap.has('id');\n\n    if (categoryId) {\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id')!;\n    } else {\n      this.currentCategoryId = 1;\n    }\n\n\n  if(this.previousCategoryId != this.currentCategoryId) {\n  this.thePageNumber = 1;\n   }\n   this.previousCategoryId = this.currentCategoryId;\n\n    this.productService.getProductListPaginate(this.thePageNumber - 1,\n      this.thePageSize,\n      this.currentCategoryId)\n      .subscribe(\n        data => {\n          this.products = data.content;\n          this.thePageNumber = data.number + 1;\n          this.thePageSize = data.size;\n          this.theTotalElements = data.totalElements;\n        }\n      )\n  }\n\n\n doSearch(value: string){\n  this.router.navigateByUrl(`product/getInfo/${value}`);\n}\n\nupdatePageSize(value: string){\nthis.thePageSize=+value;\nthis.thePageNumber=1;\nthis.listProducts();\n}\n\naddToCart(product: Product){\n\nconst theCartItem = new CartItem(product);\nthis.cartService.addToCart(theCartItem);\n}\n\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n\n        <!--Loop over the collection of products -->\n        <div *ngFor = \"let prod of products\" class=\"col-md-3\">\n          <div class=\"product-box\">\n\n            <img src=\"{{ prod.imageUrl }}\" class=\"img-responsive\">\n\n            <!--<a routerLink=\"product/getInfo/{{prod.id}}\">\n            <h1>{{prod.name}}</h1>\n            </a>-->\n            <h1>{{prod.name}}</h1>\n\n            <button class=\"au-btn-submit\" (click)=\"doSearch(prod.id)\">\n              <span class=\"bi bi-info\"> Info </span>\n            </button>\n            <div class=\"price\"> <b>{{prod.discountPrice | currency:'INR'}}</b></div>\n            <div *ngIf = \"prod.unitPrice>0\"> <strike>{{prod.unitPrice | currency:'INR'}}</strike></div>\n            <button (click)=\"addToCart(prod)\" class=\"btn btn-primary btn-sm\">Add to cart</button>\n          </div>\n        </div>\n\n        <!--If product is Empty-->\n        <div *ngIf = \"products?.length==0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n          No Products Found!\n        </div>\n\n      </div>\n\n      <!--Begin Footer-->\n      <div class=\"footer-pagination\">\n        <div class=\"row\">\n          <div class=\"col-md-6\"></div>\n          <div class=\"col-md-6\">\n            <div class=\"row\">\n              <div class=\"col-md-9\" style=\"padding-left: 30%\">\n                <ngb-pagination [(page)]=\"thePageNumber\"\n                                [(pageSize)]=\"thePageSize\"\n                                [collectionSize]=\"theTotalElements\"\n                                [maxSize]=\"5\"\n                                [boundaryLinks]=\"true\"\n                                (pageChange)=\"listProducts()\">\n\n                </ngb-pagination>\n              </div>\n              <div class=\"col-md-3 mt-2\" style=\"text-align: right;\">\n                <span class=\"mr-5\">Page Size</span>\n                <select #myPageSelect (change)=\"updatePageSize(myPageSelect.value)\">\n                  <option selected=\"true\">10</option>\n                  <option>20</option>\n                  <option>30</option>\n                  <option>50</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- End Footer-->\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\ndoSearch(value: string){\nthis.router.navigateByUrl(`product/getProducts/search/${value}`);\n}\n}\n","<form class=\"form-header\">\n\n  <input #myInput type=\"text\" class=\"au-input au-input-xl\"\n         (keyup.enter)=\"doSearch(myInput.value)\"\n         placeholder=\"Search for products ...\" >\n\n  <button class=\"au-btn-submit\" (click)=\"doSearch(myInput.value)\" >\n    Search\n  </button>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpEvent,HttpHandler,HttpInterceptor,HttpRequest } from '@angular/common/http';\nimport { from,Observable } from 'rxjs';\nimport { interval } from 'rxjs';\nimport { Customer } from 'src/app/common/customer';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor{\n  //accessToken: string= null;\n  private storage: Storage = localStorage;\n\n  constructor(private authService: AuthServiceService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    return from(this.handleAccess(req,next));\n  }\n\n  private async handleAccess(req: HttpRequest<any>, next: HttpHandler): Promise<HttpEvent<any>>{\n    const urlOrder = ['order/findByCustomerPhone','order/findAllOrders','order/status/upgrade','order/findCustomerProfile'];\n\n    if(urlOrder.some(url => req.urlWithParams.includes(url))){\n    /* let customer = new Customer();\n    customer.phone = JSON.parse(this.storage.getItem('phone'));\n    customer.identity = JSON.parse(this.storage.getItem('identity'));\n     this.authService.getAuthenticateDetail(customer).subscribe({\n                         next: response => {\n                         this.accessToken = JSON.stringify(`${response.data}`);\n                         },\n                         error: err => {\n                          console.log(`There was an error:${err.message}`);\n                         }\n                         }); */\n\n      req = req.clone({\n        setHeaders: {\n          Authorization: 'Bearer '+ JSON.parse(this.storage.getItem('authToken'))//this.accessToken\n        }\n      });\n\n    }\n    return await from(next.handle(req)).toPromise();\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Customer } from '../common/customer';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http'\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    Authorization: 'my-auth-token'\n  })\n};\n\n httpOptions.headers = httpOptions.headers.set('Access-Control-Allow-Origin', 'http://localhost:8085');\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthServiceService {\n  private authUrl = environment.baseUrl + '/authenticate';\n  //private baseUrl = 'http://localhost:8085/authenticate';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAuthenticateDetail(customer: Customer): Observable<any>{\n     return this.httpClient.post<any>(this.authUrl,customer).pipe(map(response=> response));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { Address } from 'src/app/common/address';\nimport { CustomerProfile } from 'src/app/common/customer-profile';\nimport { BehaviorSubject } from \"rxjs\";\nimport { Subject } from \"rxjs\";\nimport { Observable } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private profileUrl = environment.baseUrl + '/order/findCustomerProfile';\n  //private profileUrl = \"http://localhost:8085/order/findCustomerProfile\";\n\n  cartItems: CartItem[] = [];\n\n  totalPrice: Subject<number> = new BehaviorSubject<number>(0);\n  totalDiscount: Subject<number> = new BehaviorSubject<number>(0);\n  totalQuantity: Subject<number> = new BehaviorSubject<number>(0);\n\n  storage: Storage = localStorage;\n\n  constructor(private httpClient: HttpClient) {\n    let data = JSON.parse(this.storage.getItem('cartItems'));\n\n    if(data !=null){\n      this.cartItems = data;\n\n      this.computeCartTotals();\n    }\n  }\n\n  getProfile(phone: string): Observable<any>{\n\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append(\"phone\",phone);\n      return this.httpClient.get<CustomerProfile>(this.profileUrl,{params:queryParams});\n    }\n\n  persistCartItems(){\n    this.storage.setItem('cartItems',JSON.stringify(this.cartItems));\n  }\n\n  addToCart(theCartItem: CartItem){\n  let alreadyExistInCart: boolean = false;\n  let existingCartItem: CartItem = undefined;\n\n  if(this.cartItems.length>0){\n\n    existingCartItem = this.cartItems.find(tempCartItem => tempCartItem.id === theCartItem.id )\n\n    alreadyExistInCart = (existingCartItem != undefined);\n  }\n\n   if(alreadyExistInCart){\n   existingCartItem.quantity++;\n   }else{\n   this.cartItems.push(theCartItem);\n   }\n   this.computeCartTotals();\n  }\n\n  computeCartTotals(){\n  let totalPriceValue: number = 0;\n  let totalDiscountValue: number = 0;\n  let totalQuantityValue: number = 0;\n\n  for(let currentCartItem of this.cartItems){\n  totalPriceValue += currentCartItem.quantity * currentCartItem.discountPrice;\n  totalDiscountValue += currentCartItem.quantity * (currentCartItem.unitPrice-currentCartItem.discountPrice);\n  totalQuantityValue += currentCartItem.quantity;\n  }\n\n  this.totalPrice.next(totalPriceValue);\n  this.totalDiscount.next(totalDiscountValue);\n  this.totalQuantity.next(totalQuantityValue);\n\n  this.persistCartItems();\n  }\n\n\ndecrementQuantity(item: CartItem){\nitem.quantity--;\n\nif(item.quantity==0){\nthis.remove(item);\n}else{\nthis.computeCartTotals();\n}\n}\n\nremove(item: CartItem){\nconst itemIndex= this.cartItems.findIndex(temp=> temp.id==item.id);\n\nif(itemIndex>-1){\nthis.cartItems.splice(itemIndex,1);\nthis.computeCartTotals();\n}\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Purchase } from 'src/app/common/purchase';\nimport { Customer } from 'src/app/common/customer';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n\n  private validateUrl = environment.baseUrl + '/customer/validate/getDetail';\n  private purchaseUrl = environment.baseUrl + '/checkout/purchase';\n  /* private purchaseUrl = \"http://localhost:8085/checkout/purchase\";\n  private validateUrl = \"http://localhost:8085/customer/validate/getDetail\"; */\n\n  constructor(private httpClient: HttpClient) { }\n\n  placeOrder(purchase: Purchase): Observable<any>{\n    return this.httpClient.post<Purchase>(this.purchaseUrl,purchase);\n  }\n\n  validateCustomer(phone: string): Observable<any>{\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append(\"phone\",phone);\n    return this.httpClient.get<Customer>(this.validateUrl,{params:queryParams});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderHistory } from '../common/order-history';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderHistoryService {\n\n authToken: string;\n storage: Storage = localStorage;\n\n  private baseUrl = environment.baseUrl;\n  //private baseUrl = 'http://localhost:8085';\n  constructor(private httpClient: HttpClient) { }\n\n /*  getOrderHistory(thePhone: string): Observable<GetResponseOrderHistory>{\n     this.authToken = JSON.parse(this.storage.getItem('authToken'));\n\n     const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*,http://localhost:8085.com',\n      'Authorization': `Bearer ${this.authToken}`\n     })\n     const orderHistoryUrl = `${this.baseUrl}/order/findByCustomerPhone/${thePhone}`;\n     return this.httpClient.get<GetResponseOrderHistory>(orderHistoryUrl, { headers: headers });\n  } */\n\n  getOrderHistory1(thePhone: string): Observable<GetResponseOrderHistory>{\n       const orderHistoryUrl = `${this.baseUrl}/order/findByCustomerPhone/${thePhone}`;\n       return this.httpClient.get<GetResponseOrderHistory>(orderHistoryUrl);\n  }\n\n  getOrders(): Observable<any>{\n       const orderUrl = `${this.baseUrl}/order/findAllOrders`;\n       return this.httpClient.get<any>(orderUrl);\n  }\n\n  updateOrder(id: string): Observable<any>{\n      return this.httpClient.post<any>(`${this.baseUrl}/order/status/upgrade`,id);\n    }\n}\n\ninterface GetResponseOrderHistory{\n content:  OrderHistory[];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Customer } from '../common/customer';\nimport { MessageModel } from '../common/message-model';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http'\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OtpService {\n  private mobileUrl = environment.baseUrl + '/mobile';\n  //private baseUrl = 'http://localhost:8085/mobile';\n\n  constructor(private httpClient: HttpClient) { }\n\n   RequestOtp(message: MessageModel): Observable<any>{\n       return this.httpClient.post<any>(`${this.mobileUrl}/sendOtp`,message).pipe(\n                                                                  map(response=> response)\n                                                                  );\n   }\n\n     ValidateOtp(message: MessageModel): Observable<any>{\n           return this.httpClient.post<any>(`${this.mobileUrl}/validateOtp`,message).pipe(\n                                                                      map(response=> response)\n                                                                      );\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../common/product';\nimport { ProductCategory } from '../common/product-category';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private nctUrl = environment.baseUrl + '/nct/store';\n  //private baseUrl = 'http://localhost:8085/nct/store';\n\n  constructor(private httpClient: HttpClient) { }\n\ngetProductCategories(): Observable<ProductCategory[]>{\n\n  const categoryUrl = `${this.nctUrl}/product/getAllCategory`;\n   return this.httpClient.get<any>(categoryUrl).pipe(\n    map(response=> response)\n    );\n\n}\n\n\n  getProductListPaginate(thePage: number, thePageSize: number, categoryId: number): Observable<GetResponseProducts>{\n\n  const searchUrl = `${this.nctUrl}/product/getProducts/${categoryId}`\n                      +`?page=${thePage}&pageSize=${thePageSize}`;\n  return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n  getSearchListPaginate(thePage: number, thePageSize: number, keyword: string): Observable<GetResponseProducts>{\n\n  const filterUrl = `${this.nctUrl}/product/getProducts/search/${keyword}`\n                              +`?page=${thePage}&pageSize=${thePageSize}`;\n\n  return this.httpClient.get<GetResponseProducts>(filterUrl);\n  }\n\n  getProductInfo(productId: number): Observable<Product>{\n\n    const infoUrl = `${this.nctUrl}/product/getInfo/${productId}`;\n\n    return this.httpClient.get<any>(infoUrl).pipe(\n    map(response=> response)\n    );\n    }\n}\n\n  interface GetResponseProducts {\n  content:  Product[],\n  totalPages: number,\n  size: number,\n  number: number,\n  totalElements: number\n  }\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable,of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopFormService {\n\n  constructor() { }\n\n  getCreditCardMonths(startMonth: number): Observable<number[]>{\n  let data: number[]=[];\n  for(let theMonth=startMonth;theMonth <= 12;theMonth++){\n  data.push(theMonth);\n  }\n  return of(data);\n  }\n\n  getCreditCardYears(): Observable<number[]>{\n  let data: number[] = [];\n\n  const startYear: number = new Date().getFullYear();\n  const endYear: number = startYear+10;\n  for(let theYear=startYear; theYear<=endYear;theYear++){\n  data.push(theYear);\n  }\n  return of(data);\n  }\n\n}\n","import { FormGroup,FormBuilder,FormControl, Validator, Validators,ValidationErrors } from '@angular/forms';\n\nexport class ShopValidators {\n\nstatic notOnlyWhiteSpace(control: FormControl): ValidationErrors{\nif(control.value!=null && control.value.trim().length===0){\nreturn { 'notOnlyWhiteSpace': true };\n}else{\nreturn null;\n}\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: \"http://localhost:8085\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","/// <reference types=\"@angular/localize\" />\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}